#[Integer]
    .digits [integer -> array]: Returns the digits of integers place-value representation with radix base (default: 10). The digits are returned as an array with the least significant digit as the first array element.


#[String]
    .split [string -> array]: Divides str into substrings based on a delimiter, returning an array of these substrings.
    .chars[string -> array]: Returns an array of characters in str. This is a shorthand for str.each_char.to_a.
    .each_char: Passes each character in str to the given block, or returns an enumerator if no block is given.
        # "hello".each_char {|c| print c, ' ' } #h e l l o

#[Array]
    .map (array -> array): Invokes the given block once for each element of self. Creates a new array containing the values returned by the block.
    .sum [array]: Returns the sum of elements. 
    .join [array -> string]: Returns a string created by converting each element of the array to a string, separated by the given separator. 
    .delete_if: Deletes every element of self for which block evaluates to true.
    .sort_by: sort in ascending order. In order to sort in descending order, either use '.sort_by.reverse' or 'sort_by -results[k] (negative numbers)'
    .first: Returns the first element, or the first n elements, of the array. 
    .last: Returns the last element(s) of self. 

#[Hash]
    .sort_by: Sorts enum using a set of keys generated by mapping the values in enum through the given block.
    .zip: Takes one element from enum and merges corresponding elements from each args. 
    .select: Returns a new hash consisting of entries for which the block returns true.

#[Uncategorised]
    .with_index: Iterates the given block for each element with an index.
        #   a = [ "a", "b", "c", "d" ]
        #   a.map.with_index {|x, i| x * i}   #=> ["", "b", "cc", "ddd"]
    .each_with_index: Calls block with two arguments, the item and its index, for each item in enum. Given arguments are passed through to each().
        #   hash = Hash.new
        #   %w(cat dog wombat).each_with_index { |item, index|
        #     hash[item] = index
        #   }
        #   hash   #=> {"cat"=>0, "dog"=>1, "wombat"=>2}




